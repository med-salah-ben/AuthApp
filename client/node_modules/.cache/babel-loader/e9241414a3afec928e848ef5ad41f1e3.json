{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slh\\\\OneDrive\\\\Bureau\\\\auth-workshop\\\\client\\\\src\\\\Components\\\\Routes\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const isAuth = useSelector(state => state.authReducer.isAuth);\n\n  if (isAuth == true) {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      component: Component,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/slh/OneDrive/Bureau/auth-workshop/client/src/Components/Routes/PrivateRoute.js"],"names":["React","Redirect","Route","useSelector","PrivateRoute","component","Component","rest","isAuth","state","authReducer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,KAAlB,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAGC,SAAd;AAA0B,KAAGC;AAA7B,CAAD,KAAwC;AAAA;;AAC7D,QAAMC,MAAM,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,MAA9B,CAA1B;;AACC,MAAGA,MAAM,IAAE,IAAX,EAAgB;AACb,wBAAO,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,SAAlB;AAAA,SAAiCC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACF;;AACD,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAND;;GAAMH,Y;UACSD,W;;;KADTC,Y;AAQN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { Redirect,Route } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PrivateRoute = ({ component : Component , ...rest}) => {\r\nconst isAuth = useSelector((state) => state.authReducer.isAuth)\r\n if(isAuth==true){\r\n    return <Route component={Component} {...rest}  />\r\n }\r\n return <Redirect to=\"/\" />\r\n}\r\n\r\nexport default PrivateRoute\r\n"]},"metadata":{},"sourceType":"module"}